"""empty message

Revision ID: 626658849ae6
Revises: 9af21570a43c
Create Date: 2021-06-26 18:53:20.833388

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '626658849ae6'
down_revision = '9af21570a43c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gitea_repositories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gitea_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('owner_username', sa.String(length=200), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('empty', sa.Boolean(), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('fork', sa.Boolean(), nullable=True),
    sa.Column('mirror', sa.Boolean(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('stars_count', sa.Integer(), nullable=True),
    sa.Column('forks_count', sa.String(length=200), nullable=True),
    sa.Column('watchers_count', sa.Integer(), nullable=True),
    sa.Column('open_issues_count', sa.Integer(), nullable=True),
    sa.Column('default_branch', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('pushed_at', sa.DateTime(), nullable=True),
    sa.Column('hosting_service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hosting_service_id'], ['hosting_service.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('github_repositories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('github_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('homepage_url', sa.String(length=200), nullable=True),
    sa.Column('url', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('pushed_at', sa.DateTime(), nullable=True),
    sa.Column('short_description_html', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('is_fork', sa.Boolean(), nullable=True),
    sa.Column('is_empty', sa.Boolean(), nullable=True),
    sa.Column('is_disabled', sa.Boolean(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=True),
    sa.Column('stargazer_count', sa.Integer(), nullable=True),
    sa.Column('fork_count', sa.Integer(), nullable=True),
    sa.Column('disk_usage', sa.Integer(), nullable=True),
    sa.Column('owner_login', sa.String(length=200), nullable=True),
    sa.Column('primary_language_name', sa.String(length=200), nullable=True),
    sa.Column('license_name', sa.String(length=200), nullable=True),
    sa.Column('license_nickname', sa.String(length=200), nullable=True),
    sa.Column('hosting_service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hosting_service_id'], ['hosting_service.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('gitea_repository')
    op.drop_table('github_repository')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('github_repository',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('github_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('homepage_url', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('pushed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('short_description_html', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_archived', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_private', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_fork', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_empty', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_disabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_locked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_template', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('stargazer_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('disk_usage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('owner_login', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('primary_language_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('license_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('license_nickname', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('fork_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hosting_service_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['hosting_service_id'], ['hosting_service.id'], name='github_repository_hosting_service_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='github_repository_pkey')
    )
    op.create_table('gitea_repository',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('hosting_service_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('gitea_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('owner_username', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('empty', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('private', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('fork', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('mirror', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('stars_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('forks_count', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('watchers_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('open_issues_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('default_branch', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('pushed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['hosting_service_id'], ['hosting_service.id'], name='gitea_repository_hosting_service_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='gitea_repository_pkey')
    )
    op.drop_table('github_repositories')
    op.drop_table('gitea_repositories')
    # ### end Alembic commands ###
